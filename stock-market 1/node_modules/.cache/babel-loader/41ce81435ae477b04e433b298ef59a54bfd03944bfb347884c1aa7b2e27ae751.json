{"ast":null,"code":"var _jsxFileName = \"/Users/arvindmali/Downloads/stock-market 1/src/components/Stockcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  stocks: [],\n  balance: 10000\n};\n\n// Reducer function\nconst stockReducer = (state, action) => {\n  switch (action.type) {\n    case 'SELL_STOCK':\n      const updatedStocks = state.stocks.map(stock => {\n        if (stock.id === action.payload.id) {\n          return {\n            ...stock,\n            quantity: stock.quantity - 1\n          };\n        }\n        return stock;\n      }).filter(stock => stock.quantity > 0);\n      const stockPrice = state.stocks.find(stock => stock.id === action.payload.id).price;\n      return {\n        ...state,\n        stocks: updatedStocks,\n        balance: state.balance + stockPrice // Add stock price to balance\n      };\n    case 'BUY_STOCK':\n      const existingStock = state.stocks.find(stock => stock.id === action.payload.id);\n      const newStock = {\n        ...action.payload,\n        quantity: 1\n      };\n      return {\n        ...state,\n        stocks: existingStock ? state.stocks.map(stock => stock.id === action.payload.id ? {\n          ...stock,\n          quantity: stock.quantity + 1\n        } : stock) : [...state.stocks, newStock],\n        balance: state.balance - action.payload.price // Deduct stock price from balance\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst StockContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const StockProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(stockReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(StockContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }, this);\n};\n\n// Custom hook to use the StockContext\n_s(StockProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StockProvider;\nexport const useStock = () => {\n  _s2();\n  return useContext(StockContext);\n};\n_s2(useStock, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StockProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsxDEV","_jsxDEV","initialState","stocks","balance","stockReducer","state","action","type","updatedStocks","map","stock","id","payload","quantity","filter","stockPrice","find","price","existingStock","newStock","StockContext","StockProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStock","_s2","$RefreshReg$"],"sources":["/Users/arvindmali/Downloads/stock-market 1/src/components/Stockcontext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n \n\nconst initialState = {\n  stocks: [],  \n  balance: 10000, \n};\n \n// Reducer function\nconst stockReducer = (state, action) => {\n  switch (action.type) {\n    case 'SELL_STOCK':\n      const updatedStocks = state.stocks.map(stock => {\n        if (stock.id === action.payload.id) {\n          return { ...stock, quantity: stock.quantity - 1 }; \n        }\n        return stock;\n      }).filter(stock => stock.quantity > 0); \n \n      const stockPrice = state.stocks.find(stock => stock.id === action.payload.id).price;\n      return {\n        ...state,\n        stocks: updatedStocks,\n        balance: state.balance + stockPrice, // Add stock price to balance\n      };\n \n    case 'BUY_STOCK':\n      const existingStock = state.stocks.find(stock => stock.id === action.payload.id);\n      const newStock = { ...action.payload, quantity: 1 };\n \n      return {\n        ...state,\n        stocks: existingStock \n          ? state.stocks.map(stock => \n              stock.id === action.payload.id \n                ? { ...stock, quantity: stock.quantity + 1 } \n                : stock) \n          : [...state.stocks, newStock],\n        balance: state.balance - action.payload.price, // Deduct stock price from balance\n      };\n \n    default:\n      return state;\n  }\n};\n \n// Create context\nconst StockContext = createContext();\n \n// Provider component\nexport const StockProvider = ({ children }) => {\n\n  const [state, dispatch] = useReducer(stockReducer, initialState);\n \n  return (\n<StockContext.Provider value={{ state, dispatch }}>\n      {children}\n</StockContext.Provider>\n  );\n};\n \n// Custom hook to use the StockContext\nexport const useStock = () => useContext(StockContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrE,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,MAAMC,aAAa,GAAGH,KAAK,CAACH,MAAM,CAACO,GAAG,CAACC,KAAK,IAAI;QAC9C,IAAIA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,EAAE;UAClC,OAAO;YAAE,GAAGD,KAAK;YAAEG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,GAAG;UAAE,CAAC;QACnD;QACA,OAAOH,KAAK;MACd,CAAC,CAAC,CAACI,MAAM,CAACJ,KAAK,IAAIA,KAAK,CAACG,QAAQ,GAAG,CAAC,CAAC;MAEtC,MAAME,UAAU,GAAGV,KAAK,CAACH,MAAM,CAACc,IAAI,CAACN,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC,CAACM,KAAK;MACnF,OAAO;QACL,GAAGZ,KAAK;QACRH,MAAM,EAAEM,aAAa;QACrBL,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAGY,UAAU,CAAE;MACvC,CAAC;IAEH,KAAK,WAAW;MACd,MAAMG,aAAa,GAAGb,KAAK,CAACH,MAAM,CAACc,IAAI,CAACN,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAChF,MAAMQ,QAAQ,GAAG;QAAE,GAAGb,MAAM,CAACM,OAAO;QAAEC,QAAQ,EAAE;MAAE,CAAC;MAEnD,OAAO;QACL,GAAGR,KAAK;QACRH,MAAM,EAAEgB,aAAa,GACjBb,KAAK,CAACH,MAAM,CAACO,GAAG,CAACC,KAAK,IACpBA,KAAK,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GAC1B;UAAE,GAAGD,KAAK;UAAEG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,GAAG;QAAE,CAAC,GAC1CH,KAAK,CAAC,GACZ,CAAC,GAAGL,KAAK,CAACH,MAAM,EAAEiB,QAAQ,CAAC;QAC/BhB,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAGG,MAAM,CAACM,OAAO,CAACK,KAAK,CAAE;MACjD,CAAC;IAEH;MACE,OAAOZ,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMe,YAAY,gBAAGxB,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMyB,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE7C,MAAM,CAAClB,KAAK,EAAEmB,QAAQ,CAAC,GAAG3B,UAAU,CAACO,YAAY,EAAEH,YAAY,CAAC;EAEhE,oBACFD,OAAA,CAACoB,YAAY,CAACK,QAAQ;IAACC,KAAK,EAAE;MAAErB,KAAK;MAAEmB;IAAS,CAAE;IAAAF,QAAA,EAC3CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAExB,CAAC;;AAED;AAAAP,EAAA,CAXaF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAY1B,OAAO,MAAMW,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACsB,YAAY,CAAC;AAAA;AAACa,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}