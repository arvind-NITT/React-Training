{"ast":null,"code":"var _jsxFileName = \"/Users/arvindmali/Downloads/stock-market 1/src/components/Stockcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useReducer, createContext, useContext, act } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InitialState = {\n  stocks: [],\n  balance: 100000\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'Sell':\n      const newstock = state.stocks.map((index, item) => {\n        if (item.id === action.state.id) {\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        }\n      }).filter(item => item.quantity > 0);\n      return {\n        ...state,\n        stocks: newstock,\n        balance: balance + action.stock.price\n      };\n    case 'Buy':\n      const stk = state.stocks.find(item => item.id == action.stock.id);\n      const newstk = {\n        ...action.stock,\n        quantity: 1\n      };\n      return {\n        ...state,\n        stocks: stk ? state.stocks.map(item => item.id === action.stock.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item) : {\n          ...state.stocks,\n          newstk\n        },\n        balance: state.balance - action.stock.price\n      };\n    default:\n      return state;\n  }\n};\nconst StockContext = /*#__PURE__*/createContext();\nexport const StockProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  return /*#__PURE__*/_jsxDEV(StockContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n_s(StockProvider, \"t2YXRAGqQS0gK432FYC+SFA/j9s=\");\n_c = StockProvider;\nexport const useStock = () => {\n  _s2();\n  return useContext(StockContext);\n};\n_s2(useStock, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StockProvider\");","map":{"version":3,"names":["useReducer","createContext","useContext","act","jsxDEV","_jsxDEV","InitialState","stocks","balance","reducer","state","action","type","newstock","map","index","item","id","quantity","filter","stock","price","stk","find","newstk","StockContext","StockProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStock","_s2","$RefreshReg$"],"sources":["/Users/arvindmali/Downloads/stock-market 1/src/components/Stockcontext.js"],"sourcesContent":["import { useReducer, createContext,useContext, act } from \"react\";\n\nconst InitialState={\n    stocks: [],\n    balance : 100000\n}\n\nconst reducer = (state,action)=>{\n    switch (action.type){\n        case 'Sell':\n            const newstock = state.stocks.map((index,item)=>{\n                if(item.id === action.state.id){\n                    return {...item,quantity:item.quantity-1};\n                }\n            }).filter(item =>item.quantity >0 )\n            \n          return {\n            ...state,\n            stocks: newstock,\n            balance: balance+ action.stock.price\n          };\n          \n          case 'Buy':\n            const stk = state.stocks.find(item => item.id == action.stock.id);\n            const newstk = {...action.stock,quantity:1}\n            return {\n            ...state,\n              stocks: stk? state.stocks.map(item=>\n                  item.id === action.stock.id? {...item,quantity: item.quantity+1}:item\n              ):{...state.stocks,newstk},\n              balance: state.balance- action.stock.price \n          };\n          default:\n            return state;\n    }\n}\n\nconst StockContext = createContext();\n\nexport const StockProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, InitialState);\n   \n    return (\n  <StockContext.Provider value={{ state, dispatch }}>\n        {children}\n  </StockContext.Provider>\n    );\n  };\n\n  export const useStock = () => useContext(StockContext);\n   "],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAACC,UAAU,EAAEC,GAAG,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,GAAC;EACfC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAG;AACd,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAACC,MAAM,KAAG;EAC5B,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MACP,MAAMC,QAAQ,GAAGH,KAAK,CAACH,MAAM,CAACO,GAAG,CAAC,CAACC,KAAK,EAACC,IAAI,KAAG;QAC5C,IAAGA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACD,KAAK,CAACO,EAAE,EAAC;UAC3B,OAAO;YAAC,GAAGD,IAAI;YAACE,QAAQ,EAACF,IAAI,CAACE,QAAQ,GAAC;UAAC,CAAC;QAC7C;MACJ,CAAC,CAAC,CAACC,MAAM,CAACH,IAAI,IAAGA,IAAI,CAACE,QAAQ,GAAE,CAAE,CAAC;MAErC,OAAO;QACL,GAAGR,KAAK;QACRH,MAAM,EAAEM,QAAQ;QAChBL,OAAO,EAAEA,OAAO,GAAEG,MAAM,CAACS,KAAK,CAACC;MACjC,CAAC;IAED,KAAK,KAAK;MACR,MAAMC,GAAG,GAAGZ,KAAK,CAACH,MAAM,CAACgB,IAAI,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACS,KAAK,CAACH,EAAE,CAAC;MACjE,MAAMO,MAAM,GAAG;QAAC,GAAGb,MAAM,CAACS,KAAK;QAACF,QAAQ,EAAC;MAAC,CAAC;MAC3C,OAAO;QACP,GAAGR,KAAK;QACNH,MAAM,EAAEe,GAAG,GAAEZ,KAAK,CAACH,MAAM,CAACO,GAAG,CAACE,IAAI,IAC9BA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACS,KAAK,CAACH,EAAE,GAAE;UAAC,GAAGD,IAAI;UAACE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAC;QAAC,CAAC,GAACF,IACrE,CAAC,GAAC;UAAC,GAAGN,KAAK,CAACH,MAAM;UAACiB;QAAM,CAAC;QAC1BhB,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAEG,MAAM,CAACS,KAAK,CAACC;MACzC,CAAC;IACD;MACE,OAAOX,KAAK;EACpB;AACJ,CAAC;AAED,MAAMe,YAAY,gBAAGxB,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMyB,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAAClB,KAAK,EAAEmB,QAAQ,CAAC,GAAG7B,UAAU,CAACS,OAAO,EAAEH,YAAY,CAAC;EAE3D,oBACFD,OAAA,CAACoB,YAAY,CAACK,QAAQ;IAACC,KAAK,EAAE;MAAErB,KAAK;MAAEmB;IAAS,CAAE;IAAAF,QAAA,EAC3CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAExB,CAAC;AAACP,EAAA,CARSF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAUxB,OAAO,MAAMW,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACuB,YAAY,CAAC;AAAA;AAACa,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}