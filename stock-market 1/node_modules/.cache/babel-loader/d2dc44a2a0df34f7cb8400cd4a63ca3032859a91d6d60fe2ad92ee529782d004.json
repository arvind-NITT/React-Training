{"ast":null,"code":"var _jsxFileName = \"/Users/arvindmali/Downloads/stock-market 1/src/components/Stockcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useReducer, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InitialState = {\n  stocks: [],\n  balance: 100000\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'Sell':\n      const updatedStocksAfterSell = state.stocks.map(item => {\n        if (item.id === action.stock.id) {\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        }\n        return item;\n      }).filter(item => item.quantity > 0); // Filter out stocks with zero quantity\n\n      return {\n        ...state,\n        stocks: updatedStocksAfterSell,\n        balance: state.balance + action.stock.price\n      };\n    case 'Buy':\n      const existingStock = state.stocks.find(item => item.id === action.stock.id);\n      const newStock = {\n        ...action.stock,\n        quantity: 1\n      };\n      return {\n        ...state,\n        stocks: existingStock ? state.stocks.map(item => item.id === action.stock.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item) : [...state.stocks, newStock],\n        // Add new stock if it doesn't exist\n        balance: state.balance - action.stock.price\n      };\n    default:\n      return state;\n  }\n};\nconst StockContext = /*#__PURE__*/createContext();\nexport const StockProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  return /*#__PURE__*/_jsxDEV(StockContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(StockProvider, \"t2YXRAGqQS0gK432FYC+SFA/j9s=\");\n_c = StockProvider;\nexport const useStock = () => {\n  _s2();\n  return useContext(StockContext);\n};\n_s2(useStock, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StockProvider\");","map":{"version":3,"names":["useReducer","createContext","useContext","jsxDEV","_jsxDEV","InitialState","stocks","balance","reducer","state","action","type","updatedStocksAfterSell","map","item","id","stock","quantity","filter","price","existingStock","find","newStock","StockContext","StockProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStock","_s2","$RefreshReg$"],"sources":["/Users/arvindmali/Downloads/stock-market 1/src/components/Stockcontext.js"],"sourcesContent":["import { useReducer, createContext, useContext } from \"react\";\n\nconst InitialState = {\n    stocks: [],\n    balance: 100000,\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'Sell':\n            const updatedStocksAfterSell = state.stocks\n                .map(item => {\n                    if (item.id === action.stock.id) {\n                        return { ...item, quantity: item.quantity - 1 };\n                    }\n                    return item;\n                })\n                .filter(item => item.quantity > 0); // Filter out stocks with zero quantity\n\n            return {\n                ...state,\n                stocks: updatedStocksAfterSell,\n                balance: state.balance + action.stock.price,\n            };\n\n        case 'Buy':\n            const existingStock = state.stocks.find(item => item.id === action.stock.id);\n            const newStock = { ...action.stock, quantity: 1 };\n\n            return {\n                ...state,\n                stocks: existingStock\n                    ? state.stocks.map(item =>\n                        item.id === action.stock.id\n                            ? { ...item, quantity: item.quantity + 1 }\n                            : item\n                    )\n                    : [...state.stocks, newStock], // Add new stock if it doesn't exist\n                balance: state.balance - action.stock.price,\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst StockContext = createContext();\n\nexport const StockProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, InitialState);\n\n    return (\n        <StockContext.Provider value={{ state, dispatch }}>\n            {children}\n        </StockContext.Provider>\n    );\n};\n\nexport const useStock = () => useContext(StockContext);\n"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MACP,MAAMC,sBAAsB,GAAGH,KAAK,CAACH,MAAM,CACtCO,GAAG,CAACC,IAAI,IAAI;QACT,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,KAAK,CAACD,EAAE,EAAE;UAC7B,OAAO;YAAE,GAAGD,IAAI;YAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;UAAE,CAAC;QACnD;QACA,OAAOH,IAAI;MACf,CAAC,CAAC,CACDI,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;;MAExC,OAAO;QACH,GAAGR,KAAK;QACRH,MAAM,EAAEM,sBAAsB;QAC9BL,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAGG,MAAM,CAACM,KAAK,CAACG;MAC1C,CAAC;IAEL,KAAK,KAAK;MACN,MAAMC,aAAa,GAAGX,KAAK,CAACH,MAAM,CAACe,IAAI,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,KAAK,CAACD,EAAE,CAAC;MAC5E,MAAMO,QAAQ,GAAG;QAAE,GAAGZ,MAAM,CAACM,KAAK;QAAEC,QAAQ,EAAE;MAAE,CAAC;MAEjD,OAAO;QACH,GAAGR,KAAK;QACRH,MAAM,EAAEc,aAAa,GACfX,KAAK,CAACH,MAAM,CAACO,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,KAAK,CAACD,EAAE,GACrB;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GACxCH,IACV,CAAC,GACC,CAAC,GAAGL,KAAK,CAACH,MAAM,EAAEgB,QAAQ,CAAC;QAAE;QACnCf,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAGG,MAAM,CAACM,KAAK,CAACG;MAC1C,CAAC;IAEL;MACI,OAAOV,KAAK;EACpB;AACJ,CAAC;AAED,MAAMc,YAAY,gBAAGtB,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMuB,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACjB,KAAK,EAAEkB,QAAQ,CAAC,GAAG3B,UAAU,CAACQ,OAAO,EAAEH,YAAY,CAAC;EAE3D,oBACID,OAAA,CAACmB,YAAY,CAACK,QAAQ;IAACC,KAAK,EAAE;MAAEpB,KAAK;MAAEkB;IAAS,CAAE;IAAAF,QAAA,EAC7CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACP,EAAA,CARWF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAU1B,OAAO,MAAMW,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACqB,YAAY,CAAC;AAAA;AAACa,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}